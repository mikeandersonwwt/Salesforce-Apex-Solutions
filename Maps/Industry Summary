PROBLEM:
#86 - Industry Summary

The method industrySummary takes as input a list of accounts with Industry and AnnualRevenue 
fields populated. The method should sum up annual revenue by each industry and return a Map 
with each industry as a key, and sum of annual revenue for that industry as the value.

For example, given the following accounts:
a1
Name: 'Acme Enterprises'
Industry: 'Banking'
AnnualRevenue: 550,000

a2
Name: 'Universal Containers'
Industry: 'Retail'
AnnualRevenue: 200,000

a3
Name: 'SForce Capital'
Industry: 'Banking'
AnnualRevenue: 450,000

The method call industrySummary(new List {a1, a2, a3}) should return a map containing the 
following key/value pairs:
'Retail' -> 200,000
'Banking' -> 1,000,000

Hint 1:
AnnualRevenue is a currency field and therefore has type Decimal, not Integer

Hint 2:
The put method in the Map class allows you to add a key/value pair to a map.

Hint 3: 
Before adding any key to the map, use the containsKey method defined on the Map class to 
check if the key has already been added. If the key is already present, you want to make 
sure you sum up the existing and new values.

Hint 4:
When looping over the accounts, check if the map already contains the current account's 
industry as the key. If it does, first get the current value stored for the key, add the 
current account's AnnualRevenue into the value, and put the calculated value back into the map.

-------------------------------
SOLUTION:

public Map<String, Decimal> industrySummary(List<Account> accounts) {
    // Declare the new map for the industry and annual revenue
    Map<String, Decimal> revenue = new Map<String, Decimal>();
    // Loop through the list of accounts
    for (Account acc : accounts) {
        // Check if the industry already exists
        if (revenue.containsKey(acc.Industry)) {
            // If yes, add the revenue the the industry total
            revenue.put(acc.Industry, revenue.get(acc.Industry) + acc.AnnualRevenue);
        } else {
            // If no, create a new entry for the industry with revenue
            revenue.put(acc.Industry, acc.AnnualRevenue);
        }
    }
    // Return the map with industry and summed up revenue
    return revenue;
}