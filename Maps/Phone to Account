PROBLEM:
#85 - Phone to Account

Implement the method phoneToAccount that takes as input a list of Accounts, and returns 
a Map containing the phone number as a key and the Account record as the value. Do not 
include accounts without a phone number.

For example, given the following accounts:
a1
Name: 'Acme Enterprises'
Phone: '2143452398'

a2
Name: 'Universal Containers'
Phone: '6923849837'

The method call phoneToAccount(new List {a1, a2}) should return a map containing the
following key/value pairs:
'2143452398' -> a1
'6923849837' -> a2

Hint 1:
The put method in the Map class allows you to add a key/value pair to a map.

Hint 2:
Declare a new variable of type Map. Loop over the account list and use the put method 
to put each key/value pair into the map, provided the Account's Phone is not null. 
Finally, return the map.

-------------------------------
SOLUTION:

public Map<String, Account> phoneToAccount(List<Account> accounts) {
    // Declare the new map
    Map<String, Account> accountPairs = new Map<String, Account>();
    // iterate through each contact in the list
    for (Account a : accounts) {
        // Check for null phone number and add if not null
        if (a.Phone != null) {
            accountPairs.put(a.Phone, a);
        }
    }
    return accountPairs;
}