PROBLEM:
#72 - Full Names

Implement the method fullNames that takes as input two equal-sized lists of strings 
firstNames and lastNames, and returns a new list containing full names, with each full name 
generated by the concatenating the first name and last name at the corresponding location 
in the input lists.

Given the following test code:
List<String> firstNames = new List<String> { 'John', 'Jane' };
List<String> lastNames = new List<String> { 'Doe', 'Smith' };
List<String> result = fullNames(firstNames, lastNames);

The expressions result[0] == 'John Doe', result[1] == 'Jane Smith', and result.size() == 2 
should be true. In addition, the two input arrays should be unmodified

Hint 1:
Use new List() to create a new empty list and use the add(listElement) method to add new 
elements into the list. Refer to documentation for the List class.

Hint 2:
After creating an empty list, loop over one of the input lists using 
for (Integer i=0; i<firstNames.size(); i++). Obtain the first name and last name at 
index i from the input lists, concatenate them using the + operator with a space in 
between, and add them to the newly created list. Finally, return the list.

-------------------------------
SOLUTION:

public List<String> fullNames(List<String> firstNames, List<String> lastNames) {
    //Create the new list to store full names
    List<String> fullNamesList = new List<String>();
    // Iterate over each index and get the first & last name
    for (Integer i = 0; i < firstNames.size(); i++) {
        String firstName = firstNames.get(i);
        String lastName = lastNames.get(i);

        // Concatenate the names and add to the list
        fullNamesList.add(firstName + ' ' + lastName);
    }    
    // Return the list
    return fullNamesList;
}