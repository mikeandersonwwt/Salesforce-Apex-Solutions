PROBLEM:
#56 - Duplicate Contacts

For this problem, we consider two Contacts as duplicates if they have the same phone 
number or the same email address.

Implement the method duplicateContacts that takes as input two Contact records c1 and c1, 
returns true if they are duplicates, and returns false otherwise.

For example, given the following test data:

Contact c1 = new Contact(LastName = 'Doe', Email = 'robert@example.com');
Contact c2 = new Contact(LastName = 'Doe', Email = 'robert.doe@example.com');
duplicateContacts(c1, c2) == false because the two contacts do not have a phone number 
at all, and do not have a matching email address.

Hint 1:
Use an if statement to check if c1.Email is equal to c2.Email, or if c1.Phone is equal 
to c2.Phone. Make sure you only do the comparisons if the values are not null.

-------------------------------
SOLUTION:

public Boolean duplicateContacts(Contact c1, Contact c2) {
    // Check if Phone is null then matching
    if (c1.Phone != null && c1.Phone != '') {
        if (c1.Phone == c2.Phone) {
            return true;
        }
    }
    // Check if Email is null then matching
    if (c1.Email != null && c1.Email != '') {
        if (c1.Email == c2.Email) {
            return true;
        }
    } 
    return false;
}