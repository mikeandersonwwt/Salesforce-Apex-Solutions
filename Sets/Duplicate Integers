PROBLEM:
#80 - Duplicate Integers

Implement the method containsDuplicates that takes as input a list of integers, returns 
true if the list has more than one occurence of the same number, and returns false if 
every element in the list is unique.

Examples:
containsDuplicates(new List {5, 50, 500, 1000}) evaluates to false
containsDuplicates(new List {5, 50, 500, 50}) evaluates to true

Hint 1:
The Set's blazing-fast contains method will allow solving this problem within Apex CPU 
limits. Use the add and contains methods defined on the Set class.

Hint 2:
Start with an empty set of integers. For each number, check if the set contains it and add 
it to the set if it doesn't.

-------------------------------
SOLUTION:

public Boolean containsDuplicates(List<Integer> nums) {
    // Check if list contains integers
    if (nums.size() == 0) {
        return false;
    }
    // Create a new set to store the numbers
    Set<Integer> numbers = new Set<Integer>();
    // Iterate over the set to check if the number already exists
    for (Integer num : nums) {
        if (numbers.contains(num)) {
            return true; // Duplicate found
        }
        // Add number to set if not present 
        numbers.add(num);
    }
    return false; // No duplicates found
}